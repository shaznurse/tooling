name: Terraform-AWS-Infra-Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment Environment (dev, qa, uat, prod)"
        required: true
        default: "prod"
      region:
        description: "AWS Region"
        required: true
        default: "us-east-2"
      action:
        description: "Terraform action: apply (default) or destroy"
        required: false
        default: "apply"

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: false

jobs:
  plan:
    name: ðŸŒ± Plan
    runs-on: ubuntu-latest
    env:
      TF_ENV:       ${{ github.event.inputs.environment || 'prod' }}
      AWS_REGION:   ${{ github.event.inputs.region      || 'us-east-2' }}
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform fmt
        working-directory: .
        run: terraform fmt -check

      - name: Terraform init
        working-directory: .
        run: |
          terraform init \
            -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate" \
            -input=false

      - name: Terraform plan
        working-directory: .
        run: terraform plan -lock=false

  approve:
    name: ðŸ”’ Await Approval
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ github.event.inputs.environment || 'prod' }}
    steps:
      - run: echo "âœ… Please go to the Actions UI and Approve or Reject."

  deploy:
    name: ðŸš€ Deploy
    runs-on: ubuntu-latest
    needs: approve
    env:
      TF_ENV:       ${{ github.event.inputs.environment || 'prod' }}
      AWS_REGION:   ${{ github.event.inputs.region      || 'us-east-2' }}
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform init
        working-directory: .
        run: |
          terraform init \
            -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate" \
            -input=false

      - name: Terraform Apply
        if: ${{ github.event.inputs.action != 'destroy' }}
        working-directory: .
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: .
        run: terraform destroy -auto-approve -lock=false
